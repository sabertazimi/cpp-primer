sudo: require
language: cpp
addons:
  apt:
    sources:
      - george-edison55-precise-backports
      - ubuntu-toolchain-r-test
    packages:
      - g++-7
      - make
      - doxygen
      # - cmake-data
      # - cmake
      # - libboost-all-dev
      # - libnuma-dev
      # - libconfig-dev

env:
  - BUILD_TYPE=Release COMPILER_VER=7 GEN_DOC=TRUE

cache:
  directories:
    - pip
    - $HOME/.cache/pip
before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log

before_install:
  - if [[ "${COMPILER_VER}" != "" ]]; then export CXX=${CXX}-${COMPILER_VER}; fi
  - if [[ "${COMPILER_VER}" != "" ]]; then export CC=${CC}-${COMPILER_VER}; fi
  - if [[ "${COMPILER_VER}" != "" ]]; then export GCOV=gcov-${COMPILER_VER}; fi
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p $HOME/.local
      CMAKE_URL="http://cmake.org/files/v3.9/cmake-3.9.0-Linux-x86_64.tar.gz"
      if [ ! -e $HOME/.local/bin/cmake ]; then
          echo "CMake not found in the cache, get and extract it..."
          travis_retry curl -L ${CMAKE_URL} \
              | tar -xz -C $HOME/.local --strip-components=1
      else
          echo "Using cached CMake"
      fi
    fi
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew update && brew upgrade cmake
    fi
  - sudo pip install cpplint

script:
  - ${CXX} --version
  - echo CXXFLAGS=${CXXFLAGS}
  - |
    if [[ "$BUILD_TYPE" == "Coverage" ]]; then
      ctest -S cmake/CI.CTestScript.cmake --output-on-failure -VV -DCTEST_SITE=Travis -DCTEST_BUILD_NAME="${TRAVIS_OS_NAME}-$BUILD_TYPE"
    else
      mkdir build && cd build && \
      cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE .. && \
      make -j4 && \
      ctest -VV .
    fi
  - |
    if [[ "$GEN_DOC" == "TRUE" ]]; then
      cmake --build . --target doc
    fi
  # - make lint

after_success:
    - echo "[SUCCESS]"
    - |
      if [[ "$BUILD_TYPE" == "Coverage" ]]; then
        bash <(curl -s https://codecov.io/bash) -X gcov || echo "Codecov did not collect coverage reports"
      fi

deploy:
  provider: pages
  skip-cleanup: true
  github-token: $GITHUB_TOKEN
  local-dir: build/html
  on:
    branch: master
    condition: $GEN_DOC = TRUE
